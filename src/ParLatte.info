-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.11 from ParLatte.y
-----------------------------------------------------------------------------

state 147 contains 1 shift/reduce conflicts.

rule 44 is unused
rule 45 is unused
rule 46 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> Type Ident '(' ListArg ')' Block         (5)
	TopDef -> 'class' Ident '{' ListClassProp '}'      (6)
	TopDef -> 'class' Ident 'extends' Ident '{' ListClassProp '}'   (7)
	ClassProp -> Type Ident ';'                        (8)
	ClassProp -> Type Ident '(' ListArg ')' Block      (9)
	ListTopDef -> TopDef                               (10)
	ListTopDef -> TopDef ListTopDef                    (11)
	Arg -> Type Ident                                  (12)
	ListArg ->                                         (13)
	ListArg -> Arg                                     (14)
	ListArg -> Arg ',' ListArg                         (15)
	ListClassProp -> ClassProp                         (16)
	ListClassProp -> ClassProp ListClassProp           (17)
	Block -> '{' ListStmt '}'                          (18)
	ListStmt ->                                        (19)
	ListStmt -> Stmt ListStmt                          (20)
	Stmt -> ';'                                        (21)
	Stmt -> Block                                      (22)
	Stmt -> Type ListItem ';'                          (23)
	Stmt -> Expr '=' Expr ';'                          (24)
	Stmt -> Ident '++' ';'                             (25)
	Stmt -> Ident '--' ';'                             (26)
	Stmt -> 'return' Expr ';'                          (27)
	Stmt -> 'return' ';'                               (28)
	Stmt -> 'if' '(' Expr ')' Stmt                     (29)
	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt         (30)
	Stmt -> 'while' '(' Expr ')' Stmt                  (31)
	Stmt -> 'for' '(' Type Ident ':' Expr ')' Stmt     (32)
	Stmt -> Expr ';'                                   (33)
	Item -> Ident                                      (34)
	Item -> Ident '=' Expr                             (35)
	ListItem -> Item                                   (36)
	ListItem -> Item ',' ListItem                      (37)
	Type -> 'int'                                      (38)
	Type -> 'string'                                   (39)
	Type -> 'boolean'                                  (40)
	Type -> 'void'                                     (41)
	Type -> Type '[]'                                  (42)
	Type -> Ident                                      (43)
	ListType ->                                        (44)
	ListType -> Type                                   (45)
	ListType -> Type ',' ListType                      (46)
	Expr6 -> Ident                                     (47)
	Expr6 -> Integer                                   (48)
	Expr6 -> 'true'                                    (49)
	Expr6 -> 'false'                                   (50)
	Expr6 -> Ident '(' ListExpr ')'                    (51)
	Expr6 -> String                                    (52)
	Expr6 -> Expr6 '.' Ident                           (53)
	Expr6 -> Expr6 '.' Ident '(' ListExpr ')'          (54)
	Expr6 -> '(' Expr ')' 'null'                       (55)
	Expr6 -> 'new' Type '[' Expr ']'                   (56)
	Expr6 -> Expr6 '[' Expr ']'                        (57)
	Expr6 -> '(' Expr ')'                              (58)
	Expr5 -> 'new' Ident                               (59)
	Expr5 -> '-' Expr6                                 (60)
	Expr5 -> '!' Expr6                                 (61)
	Expr5 -> Expr6                                     (62)
	Expr4 -> Expr4 MulOp Expr5                         (63)
	Expr4 -> Expr5                                     (64)
	Expr3 -> Expr3 AddOp Expr4                         (65)
	Expr3 -> Expr4                                     (66)
	Expr2 -> Expr2 RelOp Expr3                         (67)
	Expr2 -> Expr3                                     (68)
	Expr1 -> Expr2 '&&' Expr1                          (69)
	Expr1 -> Expr2                                     (70)
	Expr -> Expr1 '||' Expr                            (71)
	Expr -> Expr1                                      (72)
	ListExpr ->                                        (73)
	ListExpr -> Expr                                   (74)
	ListExpr -> Expr ',' ListExpr                      (75)
	AddOp -> '+'                                       (76)
	AddOp -> '-'                                       (77)
	MulOp -> '*'                                       (78)
	MulOp -> '/'                                       (79)
	MulOp -> '%'                                       (80)
	RelOp -> '<'                                       (81)
	RelOp -> '<='                                      (82)
	RelOp -> '>'                                       (83)
	RelOp -> '>='                                      (84)
	RelOp -> '=='                                      (85)
	RelOp -> '!='                                      (86)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	'*'            { PT _ (TS _ 7) }
	'+'            { PT _ (TS _ 8) }
	'++'           { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'--'           { PT _ (TS _ 12) }
	'.'            { PT _ (TS _ 13) }
	'/'            { PT _ (TS _ 14) }
	':'            { PT _ (TS _ 15) }
	';'            { PT _ (TS _ 16) }
	'<'            { PT _ (TS _ 17) }
	'<='           { PT _ (TS _ 18) }
	'='            { PT _ (TS _ 19) }
	'=='           { PT _ (TS _ 20) }
	'>'            { PT _ (TS _ 21) }
	'>='           { PT _ (TS _ 22) }
	'['            { PT _ (TS _ 23) }
	'[]'           { PT _ (TS _ 24) }
	']'            { PT _ (TS _ 25) }
	'boolean'      { PT _ (TS _ 26) }
	'class'        { PT _ (TS _ 27) }
	'else'         { PT _ (TS _ 28) }
	'extends'      { PT _ (TS _ 29) }
	'false'        { PT _ (TS _ 30) }
	'for'          { PT _ (TS _ 31) }
	'if'           { PT _ (TS _ 32) }
	'int'          { PT _ (TS _ 33) }
	'new'          { PT _ (TS _ 34) }
	'null'         { PT _ (TS _ 35) }
	'return'       { PT _ (TS _ 36) }
	'string'       { PT _ (TS _ 37) }
	'true'         { PT _ (TS _ 38) }
	'void'         { PT _ (TS _ 39) }
	'while'        { PT _ (TS _ 40) }
	'{'            { PT _ (TS _ 41) }
	'||'           { PT _ (TS _ 42) }
	'}'            { PT _ (TS _ 43) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rules 5, 6, 7
	ClassProp       rules 8, 9
	ListTopDef      rules 10, 11
	Arg             rule  12
	ListArg         rules 13, 14, 15
	ListClassProp   rules 16, 17
	Block           rule  18
	ListStmt        rules 19, 20
	Stmt            rules 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33
	Item            rules 34, 35
	ListItem        rules 36, 37
	Type            rules 38, 39, 40, 41, 42, 43
	ListType        rules 44, 45, 46
	Expr6           rules 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58
	Expr5           rules 59, 60, 61, 62
	Expr4           rules 63, 64
	Expr3           rules 65, 66
	Expr2           rules 67, 68
	Expr1           rules 69, 70
	Expr            rules 71, 72
	ListExpr        rules 73, 74, 75
	AddOp           rules 76, 77
	MulOp           rules 78, 79, 80
	RelOp           rules 81, 82, 83, 84, 85, 86

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'boolean'      shift, and enter state 8
	'class'        shift, and enter state 9
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Program        goto state 4
	TopDef         goto state 5
	ListTopDef     goto state 6
	Type           goto state 7

State 1


	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'.'            reduce using rule 1
	'/'            reduce using rule 1
	':'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'['            reduce using rule 1
	'[]'           reduce using rule 1
	']'            reduce using rule 1
	'extends'      reduce using rule 1
	'{'            reduce using rule 1
	'||'           reduce using rule 1
	L_Ident        reduce using rule 1


State 3

	Type -> Ident .                                     (rule 43)

	'['            reduce using rule 43
	'[]'           reduce using rule 43
	L_Ident        reduce using rule 43


State 4

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 5

	ListTopDef -> TopDef .                              (rule 10)
	ListTopDef -> TopDef . ListTopDef                   (rule 11)

	'boolean'      shift, and enter state 8
	'class'        shift, and enter state 9
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2
	%eof           reduce using rule 10

	Ident          goto state 3
	TopDef         goto state 5
	ListTopDef     goto state 16
	Type           goto state 7

State 6

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 7

	TopDef -> Type . Ident '(' ListArg ')' Block        (rule 5)
	Type -> Type . '[]'                                 (rule 42)

	'[]'           shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 14

State 8

	Type -> 'boolean' .                                 (rule 40)

	'['            reduce using rule 40
	'[]'           reduce using rule 40
	L_Ident        reduce using rule 40


State 9

	TopDef -> 'class' . Ident '{' ListClassProp '}'     (rule 6)
	TopDef -> 'class' . Ident 'extends' Ident '{' ListClassProp '}'    (rule 7)

	L_Ident        shift, and enter state 2

	Ident          goto state 13

State 10

	Type -> 'int' .                                     (rule 38)

	'['            reduce using rule 38
	'[]'           reduce using rule 38
	L_Ident        reduce using rule 38


State 11

	Type -> 'string' .                                  (rule 39)

	'['            reduce using rule 39
	'[]'           reduce using rule 39
	L_Ident        reduce using rule 39


State 12

	Type -> 'void' .                                    (rule 41)

	'['            reduce using rule 41
	'[]'           reduce using rule 41
	L_Ident        reduce using rule 41


State 13

	TopDef -> 'class' Ident . '{' ListClassProp '}'     (rule 6)
	TopDef -> 'class' Ident . 'extends' Ident '{' ListClassProp '}'    (rule 7)

	'extends'      shift, and enter state 18
	'{'            shift, and enter state 19


State 14

	TopDef -> Type Ident . '(' ListArg ')' Block        (rule 5)

	'('            shift, and enter state 17


State 15

	Type -> Type '[]' .                                 (rule 42)

	'['            reduce using rule 42
	'[]'           reduce using rule 42
	L_Ident        reduce using rule 42


State 16

	ListTopDef -> TopDef ListTopDef .                   (rule 11)

	%eof           reduce using rule 11


State 17

	TopDef -> Type Ident '(' . ListArg ')' Block        (rule 5)

	')'            reduce using rule 13
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 24
	ListArg        goto state 25
	Type           goto state 26

State 18

	TopDef -> 'class' Ident 'extends' . Ident '{' ListClassProp '}'    (rule 7)

	L_Ident        shift, and enter state 2

	Ident          goto state 23

State 19

	TopDef -> 'class' Ident '{' . ListClassProp '}'     (rule 6)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	ClassProp      goto state 20
	ListClassProp  goto state 21
	Type           goto state 22

State 20

	ListClassProp -> ClassProp .                        (rule 16)
	ListClassProp -> ClassProp . ListClassProp          (rule 17)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	'}'            reduce using rule 16
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	ClassProp      goto state 20
	ListClassProp  goto state 33
	Type           goto state 22

State 21

	TopDef -> 'class' Ident '{' ListClassProp . '}'     (rule 6)

	'}'            shift, and enter state 32


State 22

	ClassProp -> Type . Ident ';'                       (rule 8)
	ClassProp -> Type . Ident '(' ListArg ')' Block     (rule 9)
	Type -> Type . '[]'                                 (rule 42)

	'[]'           shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 31

State 23

	TopDef -> 'class' Ident 'extends' Ident . '{' ListClassProp '}'    (rule 7)

	'{'            shift, and enter state 30


State 24

	ListArg -> Arg .                                    (rule 14)
	ListArg -> Arg . ',' ListArg                        (rule 15)

	')'            reduce using rule 14
	','            shift, and enter state 29


State 25

	TopDef -> Type Ident '(' ListArg . ')' Block        (rule 5)

	')'            shift, and enter state 28


State 26

	Arg -> Type . Ident                                 (rule 12)
	Type -> Type . '[]'                                 (rule 42)

	'[]'           shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 27

State 27

	Arg -> Type Ident .                                 (rule 12)

	')'            reduce using rule 12
	','            reduce using rule 12


State 28

	TopDef -> Type Ident '(' ListArg ')' . Block        (rule 5)

	'{'            shift, and enter state 39

	Block          goto state 38

State 29

	ListArg -> Arg ',' . ListArg                        (rule 15)

	')'            reduce using rule 13
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 24
	ListArg        goto state 37
	Type           goto state 26

State 30

	TopDef -> 'class' Ident 'extends' Ident '{' . ListClassProp '}'    (rule 7)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	ClassProp      goto state 20
	ListClassProp  goto state 36
	Type           goto state 22

State 31

	ClassProp -> Type Ident . ';'                       (rule 8)
	ClassProp -> Type Ident . '(' ListArg ')' Block     (rule 9)

	'('            shift, and enter state 34
	';'            shift, and enter state 35


State 32

	TopDef -> 'class' Ident '{' ListClassProp '}' .     (rule 6)

	'boolean'      reduce using rule 6
	'class'        reduce using rule 6
	'int'          reduce using rule 6
	'string'       reduce using rule 6
	'void'         reduce using rule 6
	L_Ident        reduce using rule 6
	%eof           reduce using rule 6


State 33

	ListClassProp -> ClassProp ListClassProp .          (rule 17)

	'}'            reduce using rule 17


State 34

	ClassProp -> Type Ident '(' . ListArg ')' Block     (rule 9)

	')'            reduce using rule 13
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 24
	ListArg        goto state 68
	Type           goto state 26

State 35

	ClassProp -> Type Ident ';' .                       (rule 8)

	'boolean'      reduce using rule 8
	'int'          reduce using rule 8
	'string'       reduce using rule 8
	'void'         reduce using rule 8
	'}'            reduce using rule 8
	L_Ident        reduce using rule 8


State 36

	TopDef -> 'class' Ident 'extends' Ident '{' ListClassProp . '}'    (rule 7)

	'}'            shift, and enter state 67


State 37

	ListArg -> Arg ',' ListArg .                        (rule 15)

	')'            reduce using rule 15


State 38

	TopDef -> Type Ident '(' ListArg ')' Block .        (rule 5)

	'boolean'      reduce using rule 5
	'class'        reduce using rule 5
	'int'          reduce using rule 5
	'string'       reduce using rule 5
	'void'         reduce using rule 5
	L_Ident        reduce using rule 5
	%eof           reduce using rule 5


State 39

	Block -> '{' . ListStmt '}'                         (rule 18)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	';'            shift, and enter state 57
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 58
	'for'          shift, and enter state 59
	'if'           shift, and enter state 60
	'int'          shift, and enter state 10
	'new'          shift, and enter state 61
	'return'       shift, and enter state 62
	'string'       shift, and enter state 11
	'true'         shift, and enter state 63
	'void'         shift, and enter state 12
	'while'        shift, and enter state 64
	'{'            shift, and enter state 39
	'}'            reduce using rule 19
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 40
	Integer        goto state 41
	String         goto state 42
	Block          goto state 43
	ListStmt       goto state 44
	Stmt           goto state 45
	Type           goto state 46
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 53

State 40

	Stmt -> Ident . '++' ';'                            (rule 25)
	Stmt -> Ident . '--' ';'                            (rule 26)
	Type -> Ident .                                     (rule 43)
	Expr6 -> Ident .                                    (rule 47)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 51)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	'('            shift, and enter state 107
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	'++'           shift, and enter state 108
	'-'            reduce using rule 47
	'--'           shift, and enter state 109
	'.'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'='            reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'['            reduce using rule 47
	'[]'           reduce using rule 43
	'||'           reduce using rule 47
	L_Ident        reduce using rule 43


State 41

	Expr6 -> Integer .                                  (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'.'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'='            reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'['            reduce using rule 48
	']'            reduce using rule 48
	'||'           reduce using rule 48


State 42

	Expr6 -> String .                                   (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'.'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'='            reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'['            reduce using rule 52
	']'            reduce using rule 52
	'||'           reduce using rule 52


State 43

	Stmt -> Block .                                     (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'boolean'      reduce using rule 22
	'else'         reduce using rule 22
	'false'        reduce using rule 22
	'for'          reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'new'          reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 44

	Block -> '{' ListStmt . '}'                         (rule 18)

	'}'            shift, and enter state 106


State 45

	ListStmt -> Stmt . ListStmt                         (rule 20)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	';'            shift, and enter state 57
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 58
	'for'          shift, and enter state 59
	'if'           shift, and enter state 60
	'int'          shift, and enter state 10
	'new'          shift, and enter state 61
	'return'       shift, and enter state 62
	'string'       shift, and enter state 11
	'true'         shift, and enter state 63
	'void'         shift, and enter state 12
	'while'        shift, and enter state 64
	'{'            shift, and enter state 39
	'}'            reduce using rule 19
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 40
	Integer        goto state 41
	String         goto state 42
	Block          goto state 43
	ListStmt       goto state 105
	Stmt           goto state 45
	Type           goto state 46
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 53

State 46

	Stmt -> Type . ListItem ';'                         (rule 23)
	Type -> Type . '[]'                                 (rule 42)

	'[]'           shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 102
	Item           goto state 103
	ListItem       goto state 104

State 47

	Expr6 -> Expr6 . '.' Ident                          (rule 53)
	Expr6 -> Expr6 . '.' Ident '(' ListExpr ')'         (rule 54)
	Expr6 -> Expr6 . '[' Expr ']'                       (rule 57)
	Expr5 -> Expr6 .                                    (rule 62)

	'!='           reduce using rule 62
	'%'            reduce using rule 62
	'&&'           reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'+'            reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'.'            shift, and enter state 100
	'/'            reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'='            reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'['            shift, and enter state 101
	']'            reduce using rule 62
	'||'           reduce using rule 62


State 48

	Expr4 -> Expr5 .                                    (rule 64)

	'!='           reduce using rule 64
	'%'            reduce using rule 64
	'&&'           reduce using rule 64
	')'            reduce using rule 64
	'*'            reduce using rule 64
	'+'            reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	'/'            reduce using rule 64
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'='            reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	']'            reduce using rule 64
	'||'           reduce using rule 64


State 49

	Expr4 -> Expr4 . MulOp Expr5                        (rule 63)
	Expr3 -> Expr4 .                                    (rule 66)

	'!='           reduce using rule 66
	'%'            shift, and enter state 97
	'&&'           reduce using rule 66
	')'            reduce using rule 66
	'*'            shift, and enter state 98
	'+'            reduce using rule 66
	','            reduce using rule 66
	'-'            reduce using rule 66
	'/'            shift, and enter state 99
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'='            reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	']'            reduce using rule 66
	'||'           reduce using rule 66

	MulOp          goto state 96

State 50

	Expr3 -> Expr3 . AddOp Expr4                        (rule 65)
	Expr2 -> Expr3 .                                    (rule 68)

	'!='           reduce using rule 68
	'&&'           reduce using rule 68
	')'            reduce using rule 68
	'+'            shift, and enter state 94
	','            reduce using rule 68
	'-'            shift, and enter state 95
	';'            reduce using rule 68
	'<'            reduce using rule 68
	'<='           reduce using rule 68
	'='            reduce using rule 68
	'=='           reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	']'            reduce using rule 68
	'||'           reduce using rule 68

	AddOp          goto state 93

State 51

	Expr2 -> Expr2 . RelOp Expr3                        (rule 67)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 69)
	Expr1 -> Expr2 .                                    (rule 70)

	'!='           shift, and enter state 86
	'&&'           shift, and enter state 87
	')'            reduce using rule 70
	','            reduce using rule 70
	';'            reduce using rule 70
	'<'            shift, and enter state 88
	'<='           shift, and enter state 89
	'='            reduce using rule 70
	'=='           shift, and enter state 90
	'>'            shift, and enter state 91
	'>='           shift, and enter state 92
	']'            reduce using rule 70
	'||'           reduce using rule 70

	RelOp          goto state 85

State 52

	Expr -> Expr1 . '||' Expr                           (rule 71)
	Expr -> Expr1 .                                     (rule 72)

	')'            reduce using rule 72
	','            reduce using rule 72
	';'            reduce using rule 72
	'='            reduce using rule 72
	']'            reduce using rule 72
	'||'           shift, and enter state 84


State 53

	Stmt -> Expr . '=' Expr ';'                         (rule 24)
	Stmt -> Expr . ';'                                  (rule 33)

	';'            shift, and enter state 82
	'='            shift, and enter state 83


State 54

	Expr5 -> '!' . Expr6                                (rule 61)

	'('            shift, and enter state 55
	'false'        shift, and enter state 58
	'new'          shift, and enter state 79
	'true'         shift, and enter state 63
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 71
	Integer        goto state 41
	String         goto state 42
	Expr6          goto state 81

State 55

	Expr6 -> '(' . Expr ')' 'null'                      (rule 55)
	Expr6 -> '(' . Expr ')'                             (rule 58)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 58
	'new'          shift, and enter state 61
	'true'         shift, and enter state 63
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 71
	Integer        goto state 41
	String         goto state 42
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 80

State 56

	Expr5 -> '-' . Expr6                                (rule 60)

	'('            shift, and enter state 55
	'false'        shift, and enter state 58
	'new'          shift, and enter state 79
	'true'         shift, and enter state 63
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 71
	Integer        goto state 41
	String         goto state 42
	Expr6          goto state 78

State 57

	Stmt -> ';' .                                       (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'boolean'      reduce using rule 21
	'else'         reduce using rule 21
	'false'        reduce using rule 21
	'for'          reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'new'          reduce using rule 21
	'return'       reduce using rule 21
	'string'       reduce using rule 21
	'true'         reduce using rule 21
	'void'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 58

	Expr6 -> 'false' .                                  (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'.'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'='            reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'['            reduce using rule 50
	']'            reduce using rule 50
	'||'           reduce using rule 50


State 59

	Stmt -> 'for' . '(' Type Ident ':' Expr ')' Stmt    (rule 32)

	'('            shift, and enter state 77


State 60

	Stmt -> 'if' . '(' Expr ')' Stmt                    (rule 29)
	Stmt -> 'if' . '(' Expr ')' Stmt 'else' Stmt        (rule 30)

	'('            shift, and enter state 76


State 61

	Expr6 -> 'new' . Type '[' Expr ']'                  (rule 56)
	Expr5 -> 'new' . Ident                              (rule 59)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 74
	Type           goto state 75

State 62

	Stmt -> 'return' . Expr ';'                         (rule 27)
	Stmt -> 'return' . ';'                              (rule 28)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	';'            shift, and enter state 73
	'false'        shift, and enter state 58
	'new'          shift, and enter state 61
	'true'         shift, and enter state 63
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 71
	Integer        goto state 41
	String         goto state 42
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 72

State 63

	Expr6 -> 'true' .                                   (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'.'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'='            reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'['            reduce using rule 49
	']'            reduce using rule 49
	'||'           reduce using rule 49


State 64

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 31)

	'('            shift, and enter state 70


State 65

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'.'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'='            reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'['            reduce using rule 2
	']'            reduce using rule 2
	'||'           reduce using rule 2


State 66

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'.'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'='            reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'['            reduce using rule 3
	']'            reduce using rule 3
	'||'           reduce using rule 3


State 67

	TopDef -> 'class' Ident 'extends' Ident '{' ListClassProp '}' .    (rule 7)

	'boolean'      reduce using rule 7
	'class'        reduce using rule 7
	'int'          reduce using rule 7
	'string'       reduce using rule 7
	'void'         reduce using rule 7
	L_Ident        reduce using rule 7
	%eof           reduce using rule 7


State 68

	ClassProp -> Type Ident '(' ListArg . ')' Block     (rule 9)

	')'            shift, and enter state 69


State 69

	ClassProp -> Type Ident '(' ListArg ')' . Block     (rule 9)

	'{'            shift, and enter state 39

	Block          goto state 131

State 70

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 31)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 58
	'new'          shift, and enter state 61
	'true'         shift, and enter state 63
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 71
	Integer        goto state 41
	String         goto state 42
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 130

State 71

	Expr6 -> Ident .                                    (rule 47)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 51)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	'('            shift, and enter state 107
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'.'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'='            reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'['            reduce using rule 47
	']'            reduce using rule 47
	'||'           reduce using rule 47


State 72

	Stmt -> 'return' Expr . ';'                         (rule 27)

	';'            shift, and enter state 129


State 73

	Stmt -> 'return' ';' .                              (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'boolean'      reduce using rule 28
	'else'         reduce using rule 28
	'false'        reduce using rule 28
	'for'          reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'new'          reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'true'         reduce using rule 28
	'void'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_Ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 74

	Type -> Ident .                                     (rule 43)
	Expr5 -> 'new' Ident .                              (rule 59)

	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&&'           reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'='            reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'['            reduce using rule 43
	'[]'           reduce using rule 43
	']'            reduce using rule 59
	'||'           reduce using rule 59


State 75

	Type -> Type . '[]'                                 (rule 42)
	Expr6 -> 'new' Type . '[' Expr ']'                  (rule 56)

	'['            shift, and enter state 128
	'[]'           shift, and enter state 15


State 76

	Stmt -> 'if' '(' . Expr ')' Stmt                    (rule 29)
	Stmt -> 'if' '(' . Expr ')' Stmt 'else' Stmt        (rule 30)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 58
	'new'          shift, and enter state 61
	'true'         shift, and enter state 63
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 71
	Integer        goto state 41
	String         goto state 42
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 127

State 77

	Stmt -> 'for' '(' . Type Ident ':' Expr ')' Stmt    (rule 32)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Type           goto state 126

State 78

	Expr6 -> Expr6 . '.' Ident                          (rule 53)
	Expr6 -> Expr6 . '.' Ident '(' ListExpr ')'         (rule 54)
	Expr6 -> Expr6 . '[' Expr ']'                       (rule 57)
	Expr5 -> '-' Expr6 .                                (rule 60)

	'!='           reduce using rule 60
	'%'            reduce using rule 60
	'&&'           reduce using rule 60
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'+'            reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'.'            shift, and enter state 100
	'/'            reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'='            reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'['            shift, and enter state 101
	']'            reduce using rule 60
	'||'           reduce using rule 60


State 79

	Expr6 -> 'new' . Type '[' Expr ']'                  (rule 56)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Type           goto state 75

State 80

	Expr6 -> '(' Expr . ')' 'null'                      (rule 55)
	Expr6 -> '(' Expr . ')'                             (rule 58)

	')'            shift, and enter state 125


State 81

	Expr6 -> Expr6 . '.' Ident                          (rule 53)
	Expr6 -> Expr6 . '.' Ident '(' ListExpr ')'         (rule 54)
	Expr6 -> Expr6 . '[' Expr ']'                       (rule 57)
	Expr5 -> '!' Expr6 .                                (rule 61)

	'!='           reduce using rule 61
	'%'            reduce using rule 61
	'&&'           reduce using rule 61
	')'            reduce using rule 61
	'*'            reduce using rule 61
	'+'            reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'.'            shift, and enter state 100
	'/'            reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'='            reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	'['            shift, and enter state 101
	']'            reduce using rule 61
	'||'           reduce using rule 61


State 82

	Stmt -> Expr ';' .                                  (rule 33)

	'!'            reduce using rule 33
	'('            reduce using rule 33
	'-'            reduce using rule 33
	';'            reduce using rule 33
	'boolean'      reduce using rule 33
	'else'         reduce using rule 33
	'false'        reduce using rule 33
	'for'          reduce using rule 33
	'if'           reduce using rule 33
	'int'          reduce using rule 33
	'new'          reduce using rule 33
	'return'       reduce using rule 33
	'string'       reduce using rule 33
	'true'         reduce using rule 33
	'void'         reduce using rule 33
	'while'        reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	L_Ident        reduce using rule 33
	L_integ        reduce using rule 33
	L_quoted       reduce using rule 33


State 83

	Stmt -> Expr '=' . Expr ';'                         (rule 24)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 58
	'new'          shift, and enter state 61
	'true'         shift, and enter state 63
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 71
	Integer        goto state 41
	String         goto state 42
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 124

State 84

	Expr -> Expr1 '||' . Expr                           (rule 71)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 58
	'new'          shift, and enter state 61
	'true'         shift, and enter state 63
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 71
	Integer        goto state 41
	String         goto state 42
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 123

State 85

	Expr2 -> Expr2 RelOp . Expr3                        (rule 67)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 58
	'new'          shift, and enter state 61
	'true'         shift, and enter state 63
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 71
	Integer        goto state 41
	String         goto state 42
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 122

State 86

	RelOp -> '!=' .                                     (rule 86)

	'!'            reduce using rule 86
	'('            reduce using rule 86
	'-'            reduce using rule 86
	'false'        reduce using rule 86
	'new'          reduce using rule 86
	'true'         reduce using rule 86
	L_Ident        reduce using rule 86
	L_integ        reduce using rule 86
	L_quoted       reduce using rule 86


State 87

	Expr1 -> Expr2 '&&' . Expr1                         (rule 69)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 58
	'new'          shift, and enter state 61
	'true'         shift, and enter state 63
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 71
	Integer        goto state 41
	String         goto state 42
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 121

State 88

	RelOp -> '<' .                                      (rule 81)

	'!'            reduce using rule 81
	'('            reduce using rule 81
	'-'            reduce using rule 81
	'false'        reduce using rule 81
	'new'          reduce using rule 81
	'true'         reduce using rule 81
	L_Ident        reduce using rule 81
	L_integ        reduce using rule 81
	L_quoted       reduce using rule 81


State 89

	RelOp -> '<=' .                                     (rule 82)

	'!'            reduce using rule 82
	'('            reduce using rule 82
	'-'            reduce using rule 82
	'false'        reduce using rule 82
	'new'          reduce using rule 82
	'true'         reduce using rule 82
	L_Ident        reduce using rule 82
	L_integ        reduce using rule 82
	L_quoted       reduce using rule 82


State 90

	RelOp -> '==' .                                     (rule 85)

	'!'            reduce using rule 85
	'('            reduce using rule 85
	'-'            reduce using rule 85
	'false'        reduce using rule 85
	'new'          reduce using rule 85
	'true'         reduce using rule 85
	L_Ident        reduce using rule 85
	L_integ        reduce using rule 85
	L_quoted       reduce using rule 85


State 91

	RelOp -> '>' .                                      (rule 83)

	'!'            reduce using rule 83
	'('            reduce using rule 83
	'-'            reduce using rule 83
	'false'        reduce using rule 83
	'new'          reduce using rule 83
	'true'         reduce using rule 83
	L_Ident        reduce using rule 83
	L_integ        reduce using rule 83
	L_quoted       reduce using rule 83


State 92

	RelOp -> '>=' .                                     (rule 84)

	'!'            reduce using rule 84
	'('            reduce using rule 84
	'-'            reduce using rule 84
	'false'        reduce using rule 84
	'new'          reduce using rule 84
	'true'         reduce using rule 84
	L_Ident        reduce using rule 84
	L_integ        reduce using rule 84
	L_quoted       reduce using rule 84


State 93

	Expr3 -> Expr3 AddOp . Expr4                        (rule 65)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 58
	'new'          shift, and enter state 61
	'true'         shift, and enter state 63
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 71
	Integer        goto state 41
	String         goto state 42
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 120

State 94

	AddOp -> '+' .                                      (rule 76)

	'!'            reduce using rule 76
	'('            reduce using rule 76
	'-'            reduce using rule 76
	'false'        reduce using rule 76
	'new'          reduce using rule 76
	'true'         reduce using rule 76
	L_Ident        reduce using rule 76
	L_integ        reduce using rule 76
	L_quoted       reduce using rule 76


State 95

	AddOp -> '-' .                                      (rule 77)

	'!'            reduce using rule 77
	'('            reduce using rule 77
	'-'            reduce using rule 77
	'false'        reduce using rule 77
	'new'          reduce using rule 77
	'true'         reduce using rule 77
	L_Ident        reduce using rule 77
	L_integ        reduce using rule 77
	L_quoted       reduce using rule 77


State 96

	Expr4 -> Expr4 MulOp . Expr5                        (rule 63)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 58
	'new'          shift, and enter state 61
	'true'         shift, and enter state 63
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 71
	Integer        goto state 41
	String         goto state 42
	Expr6          goto state 47
	Expr5          goto state 119

State 97

	MulOp -> '%' .                                      (rule 80)

	'!'            reduce using rule 80
	'('            reduce using rule 80
	'-'            reduce using rule 80
	'false'        reduce using rule 80
	'new'          reduce using rule 80
	'true'         reduce using rule 80
	L_Ident        reduce using rule 80
	L_integ        reduce using rule 80
	L_quoted       reduce using rule 80


State 98

	MulOp -> '*' .                                      (rule 78)

	'!'            reduce using rule 78
	'('            reduce using rule 78
	'-'            reduce using rule 78
	'false'        reduce using rule 78
	'new'          reduce using rule 78
	'true'         reduce using rule 78
	L_Ident        reduce using rule 78
	L_integ        reduce using rule 78
	L_quoted       reduce using rule 78


State 99

	MulOp -> '/' .                                      (rule 79)

	'!'            reduce using rule 79
	'('            reduce using rule 79
	'-'            reduce using rule 79
	'false'        reduce using rule 79
	'new'          reduce using rule 79
	'true'         reduce using rule 79
	L_Ident        reduce using rule 79
	L_integ        reduce using rule 79
	L_quoted       reduce using rule 79


State 100

	Expr6 -> Expr6 '.' . Ident                          (rule 53)
	Expr6 -> Expr6 '.' . Ident '(' ListExpr ')'         (rule 54)

	L_Ident        shift, and enter state 2

	Ident          goto state 118

State 101

	Expr6 -> Expr6 '[' . Expr ']'                       (rule 57)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 58
	'new'          shift, and enter state 61
	'true'         shift, and enter state 63
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 71
	Integer        goto state 41
	String         goto state 42
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 117

State 102

	Item -> Ident .                                     (rule 34)
	Item -> Ident . '=' Expr                            (rule 35)

	','            reduce using rule 34
	';'            reduce using rule 34
	'='            shift, and enter state 116


State 103

	ListItem -> Item .                                  (rule 36)
	ListItem -> Item . ',' ListItem                     (rule 37)

	','            shift, and enter state 115
	';'            reduce using rule 36


State 104

	Stmt -> Type ListItem . ';'                         (rule 23)

	';'            shift, and enter state 114


State 105

	ListStmt -> Stmt ListStmt .                         (rule 20)

	'}'            reduce using rule 20


State 106

	Block -> '{' ListStmt '}' .                         (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'boolean'      reduce using rule 18
	'class'        reduce using rule 18
	'else'         reduce using rule 18
	'false'        reduce using rule 18
	'for'          reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'new'          reduce using rule 18
	'return'       reduce using rule 18
	'string'       reduce using rule 18
	'true'         reduce using rule 18
	'void'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18
	%eof           reduce using rule 18


State 107

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 51)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	')'            reduce using rule 73
	'-'            shift, and enter state 56
	'false'        shift, and enter state 58
	'new'          shift, and enter state 61
	'true'         shift, and enter state 63
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 71
	Integer        goto state 41
	String         goto state 42
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 112
	ListExpr       goto state 113

State 108

	Stmt -> Ident '++' . ';'                            (rule 25)

	';'            shift, and enter state 111


State 109

	Stmt -> Ident '--' . ';'                            (rule 26)

	';'            shift, and enter state 110


State 110

	Stmt -> Ident '--' ';' .                            (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'boolean'      reduce using rule 26
	'else'         reduce using rule 26
	'false'        reduce using rule 26
	'for'          reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'new'          reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 111

	Stmt -> Ident '++' ';' .                            (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'boolean'      reduce using rule 25
	'else'         reduce using rule 25
	'false'        reduce using rule 25
	'for'          reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'new'          reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 112

	ListExpr -> Expr .                                  (rule 74)
	ListExpr -> Expr . ',' ListExpr                     (rule 75)

	')'            reduce using rule 74
	','            shift, and enter state 143


State 113

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 51)

	')'            shift, and enter state 142


State 114

	Stmt -> Type ListItem ';' .                         (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'boolean'      reduce using rule 23
	'else'         reduce using rule 23
	'false'        reduce using rule 23
	'for'          reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'new'          reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 115

	ListItem -> Item ',' . ListItem                     (rule 37)

	L_Ident        shift, and enter state 2

	Ident          goto state 102
	Item           goto state 103
	ListItem       goto state 141

State 116

	Item -> Ident '=' . Expr                            (rule 35)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 58
	'new'          shift, and enter state 61
	'true'         shift, and enter state 63
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 71
	Integer        goto state 41
	String         goto state 42
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 140

State 117

	Expr6 -> Expr6 '[' Expr . ']'                       (rule 57)

	']'            shift, and enter state 139


State 118

	Expr6 -> Expr6 '.' Ident .                          (rule 53)
	Expr6 -> Expr6 '.' Ident . '(' ListExpr ')'         (rule 54)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	'('            shift, and enter state 138
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'.'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'='            reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'['            reduce using rule 53
	']'            reduce using rule 53
	'||'           reduce using rule 53


State 119

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 63)

	'!='           reduce using rule 63
	'%'            reduce using rule 63
	'&&'           reduce using rule 63
	')'            reduce using rule 63
	'*'            reduce using rule 63
	'+'            reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'/'            reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'='            reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	']'            reduce using rule 63
	'||'           reduce using rule 63


State 120

	Expr4 -> Expr4 . MulOp Expr5                        (rule 63)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 65)

	'!='           reduce using rule 65
	'%'            shift, and enter state 97
	'&&'           reduce using rule 65
	')'            reduce using rule 65
	'*'            shift, and enter state 98
	'+'            reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	'/'            shift, and enter state 99
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'='            reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	']'            reduce using rule 65
	'||'           reduce using rule 65

	MulOp          goto state 96

State 121

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 69)

	')'            reduce using rule 69
	','            reduce using rule 69
	';'            reduce using rule 69
	'='            reduce using rule 69
	']'            reduce using rule 69
	'||'           reduce using rule 69


State 122

	Expr3 -> Expr3 . AddOp Expr4                        (rule 65)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 67)

	'!='           reduce using rule 67
	'&&'           reduce using rule 67
	')'            reduce using rule 67
	'+'            shift, and enter state 94
	','            reduce using rule 67
	'-'            shift, and enter state 95
	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'='            reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	']'            reduce using rule 67
	'||'           reduce using rule 67

	AddOp          goto state 93

State 123

	Expr -> Expr1 '||' Expr .                           (rule 71)

	')'            reduce using rule 71
	','            reduce using rule 71
	';'            reduce using rule 71
	'='            reduce using rule 71
	']'            reduce using rule 71


State 124

	Stmt -> Expr '=' Expr . ';'                         (rule 24)

	';'            shift, and enter state 137


State 125

	Expr6 -> '(' Expr ')' . 'null'                      (rule 55)
	Expr6 -> '(' Expr ')' .                             (rule 58)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'.'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'='            reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'['            reduce using rule 58
	']'            reduce using rule 58
	'null'         shift, and enter state 136
	'||'           reduce using rule 58


State 126

	Stmt -> 'for' '(' Type . Ident ':' Expr ')' Stmt    (rule 32)
	Type -> Type . '[]'                                 (rule 42)

	'[]'           shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 135

State 127

	Stmt -> 'if' '(' Expr . ')' Stmt                    (rule 29)
	Stmt -> 'if' '(' Expr . ')' Stmt 'else' Stmt        (rule 30)

	')'            shift, and enter state 134


State 128

	Expr6 -> 'new' Type '[' . Expr ']'                  (rule 56)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 58
	'new'          shift, and enter state 61
	'true'         shift, and enter state 63
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 71
	Integer        goto state 41
	String         goto state 42
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 133

State 129

	Stmt -> 'return' Expr ';' .                         (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'boolean'      reduce using rule 27
	'else'         reduce using rule 27
	'false'        reduce using rule 27
	'for'          reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'new'          reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'void'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 130

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 31)

	')'            shift, and enter state 132


State 131

	ClassProp -> Type Ident '(' ListArg ')' Block .     (rule 9)

	'boolean'      reduce using rule 9
	'int'          reduce using rule 9
	'string'       reduce using rule 9
	'void'         reduce using rule 9
	'}'            reduce using rule 9
	L_Ident        reduce using rule 9


State 132

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 31)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	';'            shift, and enter state 57
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 58
	'for'          shift, and enter state 59
	'if'           shift, and enter state 60
	'int'          shift, and enter state 10
	'new'          shift, and enter state 61
	'return'       shift, and enter state 62
	'string'       shift, and enter state 11
	'true'         shift, and enter state 63
	'void'         shift, and enter state 12
	'while'        shift, and enter state 64
	'{'            shift, and enter state 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 40
	Integer        goto state 41
	String         goto state 42
	Block          goto state 43
	Stmt           goto state 149
	Type           goto state 46
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 53

State 133

	Expr6 -> 'new' Type '[' Expr . ']'                  (rule 56)

	']'            shift, and enter state 148


State 134

	Stmt -> 'if' '(' Expr ')' . Stmt                    (rule 29)
	Stmt -> 'if' '(' Expr ')' . Stmt 'else' Stmt        (rule 30)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	';'            shift, and enter state 57
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 58
	'for'          shift, and enter state 59
	'if'           shift, and enter state 60
	'int'          shift, and enter state 10
	'new'          shift, and enter state 61
	'return'       shift, and enter state 62
	'string'       shift, and enter state 11
	'true'         shift, and enter state 63
	'void'         shift, and enter state 12
	'while'        shift, and enter state 64
	'{'            shift, and enter state 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 40
	Integer        goto state 41
	String         goto state 42
	Block          goto state 43
	Stmt           goto state 147
	Type           goto state 46
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 53

State 135

	Stmt -> 'for' '(' Type Ident . ':' Expr ')' Stmt    (rule 32)

	':'            shift, and enter state 146


State 136

	Expr6 -> '(' Expr ')' 'null' .                      (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'.'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'='            reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'['            reduce using rule 55
	']'            reduce using rule 55
	'||'           reduce using rule 55


State 137

	Stmt -> Expr '=' Expr ';' .                         (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'boolean'      reduce using rule 24
	'else'         reduce using rule 24
	'false'        reduce using rule 24
	'for'          reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'new'          reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 138

	Expr6 -> Expr6 '.' Ident '(' . ListExpr ')'         (rule 54)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	')'            reduce using rule 73
	'-'            shift, and enter state 56
	'false'        shift, and enter state 58
	'new'          shift, and enter state 61
	'true'         shift, and enter state 63
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 71
	Integer        goto state 41
	String         goto state 42
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 112
	ListExpr       goto state 145

State 139

	Expr6 -> Expr6 '[' Expr ']' .                       (rule 57)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'.'            reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'='            reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'['            reduce using rule 57
	']'            reduce using rule 57
	'||'           reduce using rule 57


State 140

	Item -> Ident '=' Expr .                            (rule 35)

	','            reduce using rule 35
	';'            reduce using rule 35


State 141

	ListItem -> Item ',' ListItem .                     (rule 37)

	';'            reduce using rule 37


State 142

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'.'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'='            reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'['            reduce using rule 51
	']'            reduce using rule 51
	'||'           reduce using rule 51


State 143

	ListExpr -> Expr ',' . ListExpr                     (rule 75)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	')'            reduce using rule 73
	'-'            shift, and enter state 56
	'false'        shift, and enter state 58
	'new'          shift, and enter state 61
	'true'         shift, and enter state 63
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 71
	Integer        goto state 41
	String         goto state 42
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 112
	ListExpr       goto state 144

State 144

	ListExpr -> Expr ',' ListExpr .                     (rule 75)

	')'            reduce using rule 75


State 145

	Expr6 -> Expr6 '.' Ident '(' ListExpr . ')'         (rule 54)

	')'            shift, and enter state 152


State 146

	Stmt -> 'for' '(' Type Ident ':' . Expr ')' Stmt    (rule 32)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 58
	'new'          shift, and enter state 61
	'true'         shift, and enter state 63
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 71
	Integer        goto state 41
	String         goto state 42
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 151

State 147

	Stmt -> 'if' '(' Expr ')' Stmt .                    (rule 29)
	Stmt -> 'if' '(' Expr ')' Stmt . 'else' Stmt        (rule 30)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'boolean'      reduce using rule 29
	'else'         shift, and enter state 150
			(reduce using rule 29)

	'false'        reduce using rule 29
	'for'          reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'new'          reduce using rule 29
	'return'       reduce using rule 29
	'string'       reduce using rule 29
	'true'         reduce using rule 29
	'void'         reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_Ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 148

	Expr6 -> 'new' Type '[' Expr ']' .                  (rule 56)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'.'            reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'='            reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'['            reduce using rule 56
	']'            reduce using rule 56
	'||'           reduce using rule 56


State 149

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 31)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	'-'            reduce using rule 31
	';'            reduce using rule 31
	'boolean'      reduce using rule 31
	'else'         reduce using rule 31
	'false'        reduce using rule 31
	'for'          reduce using rule 31
	'if'           reduce using rule 31
	'int'          reduce using rule 31
	'new'          reduce using rule 31
	'return'       reduce using rule 31
	'string'       reduce using rule 31
	'true'         reduce using rule 31
	'void'         reduce using rule 31
	'while'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_Ident        reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31


State 150

	Stmt -> 'if' '(' Expr ')' Stmt 'else' . Stmt        (rule 30)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	';'            shift, and enter state 57
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 58
	'for'          shift, and enter state 59
	'if'           shift, and enter state 60
	'int'          shift, and enter state 10
	'new'          shift, and enter state 61
	'return'       shift, and enter state 62
	'string'       shift, and enter state 11
	'true'         shift, and enter state 63
	'void'         shift, and enter state 12
	'while'        shift, and enter state 64
	'{'            shift, and enter state 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 40
	Integer        goto state 41
	String         goto state 42
	Block          goto state 43
	Stmt           goto state 154
	Type           goto state 46
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 53

State 151

	Stmt -> 'for' '(' Type Ident ':' Expr . ')' Stmt    (rule 32)

	')'            shift, and enter state 153


State 152

	Expr6 -> Expr6 '.' Ident '(' ListExpr ')' .         (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'.'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'='            reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'['            reduce using rule 54
	']'            reduce using rule 54
	'||'           reduce using rule 54


State 153

	Stmt -> 'for' '(' Type Ident ':' Expr ')' . Stmt    (rule 32)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	';'            shift, and enter state 57
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 58
	'for'          shift, and enter state 59
	'if'           shift, and enter state 60
	'int'          shift, and enter state 10
	'new'          shift, and enter state 61
	'return'       shift, and enter state 62
	'string'       shift, and enter state 11
	'true'         shift, and enter state 63
	'void'         shift, and enter state 12
	'while'        shift, and enter state 64
	'{'            shift, and enter state 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 65
	L_quoted       shift, and enter state 66

	Ident          goto state 40
	Integer        goto state 41
	String         goto state 42
	Block          goto state 43
	Stmt           goto state 155
	Type           goto state 46
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 53

State 154

	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt .        (rule 30)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'boolean'      reduce using rule 30
	'else'         reduce using rule 30
	'false'        reduce using rule 30
	'for'          reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'new'          reduce using rule 30
	'return'       reduce using rule 30
	'string'       reduce using rule 30
	'true'         reduce using rule 30
	'void'         reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_Ident        reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


State 155

	Stmt -> 'for' '(' Type Ident ':' Expr ')' Stmt .    (rule 32)

	'!'            reduce using rule 32
	'('            reduce using rule 32
	'-'            reduce using rule 32
	';'            reduce using rule 32
	'boolean'      reduce using rule 32
	'else'         reduce using rule 32
	'false'        reduce using rule 32
	'for'          reduce using rule 32
	'if'           reduce using rule 32
	'int'          reduce using rule 32
	'new'          reduce using rule 32
	'return'       reduce using rule 32
	'string'       reduce using rule 32
	'true'         reduce using rule 32
	'void'         reduce using rule 32
	'while'        reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	L_Ident        reduce using rule 32
	L_integ        reduce using rule 32
	L_quoted       reduce using rule 32


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 87
Number of terminals: 46
Number of non-terminals: 29
Number of states: 156
